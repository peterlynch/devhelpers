#!/bin/bash

set -e
# set -x

# nx-unpack - unzips newest versions of nexus bundles from a given local repository
# Usage: nx-unpack [+[path]] [version]
# If the first argument is '+', try to extrapolate the path to the local repository from the current git branch (e.g. /tmp/mvnrepo/master)
# If it is '+suffix', use 'suffix' as branch identifier (e.g. /tmp/mvnrepo/suffix).
# If the suffix starts with '/', use that as a full path to the repo (e.g. '+/tmp/repo' will search for nexus bundles in /tmp/repo)

. $BASEDIR/devhelper-common

ga=( com.sonatype.nexus:nexus-professional com.sonatype.nexus:nexus-professional-bundle-template com.sonatype.nexus:nexus org.sonatype.nexus:nexus-oss-webapp )

localRepo=`local_repo "$@"`

if [[ "$1" = +* ]]
then
    plusMod="$1"
    shift
fi

if [ ! -z "$1" ]
then
    version="$1"
fi

tweak() {
    nx tweak "$@"
}

plusDirName() {
    if [ ! -z "$1" ]
    then
	if [ -z "${1:1}" ]
	then
	    # empty modifier, use git branch name
	    echo "-`basename $localRepo`"
	else
	    echo "-${1:1}"
	fi
    fi
}

toDir() {
    g=$1
    a=$2
    v=$3
    plus=$4

    echo "$g.$a-$v`plusDirName $plus`"
}

for i in `seq 0 3`
do
	gaDir="$localRepo/`echo ${ga[i]} | sed -e "s@[.:]@/@g"`"

	if [ ! -d "$gaDir" ]
	then
	    continue
	fi

	if [ -z "$version" ]
	then
	    # try to find newest version
	    version=$(basename `ls -d $gaDir/[1-9]* | sort -r | head -n 1`)
	fi

	if [ -z "$version" ]
	then
	    # no version found -> no bundle to extract
	    continue
	fi

	a=`echo ${ga[i]} | cut -f 2 -d ':'`
	bundlePath="$gaDir/$version/$a-$version-bundle.zip"

	if [ -e "$bundlePath" ]
	then
	    dir=$(toDir `echo ${ga[i]} | sed -e "s/:/ /g"` "$version" "$plusMod")
	    echo -n "Extracting `basename $bundlePath` ... "
	    ( unzip -o "$bundlePath" -d "$dir" >/dev/null && \
		# this should only be one directory, GAV
		dir=`realpath $dir`
		tweak $dir/nexus*
	    ) || \
	    ( 
		echo "Could not extract $bundlePath! Continue with other bundles? (y/n)"
		read answer
		[ "$answer" != "y" ] && exit 1
	    )
	fi
done
